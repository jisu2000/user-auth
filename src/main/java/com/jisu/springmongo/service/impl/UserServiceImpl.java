package com.jisu.springmongo.service.impl;import com.jisu.springmongo.dto.request.LoginRequest;import com.jisu.springmongo.dto.request.UserRequestDTO;import com.jisu.springmongo.dto.response.UserResponseDTO;import com.jisu.springmongo.enums.Role;import com.jisu.springmongo.model.UserEO;import com.jisu.springmongo.repo.UserRepo;import com.jisu.springmongo.security.JwtHelper;import com.jisu.springmongo.service.UserService;import lombok.RequiredArgsConstructor;import org.modelmapper.ModelMapper;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.stereotype.Service;import java.util.List;import java.util.Map;@Service@RequiredArgsConstructorpublic class UserServiceImpl implements UserService {    private final UserRepo userRepo;    private final PasswordEncoder passwordEncoder;    private final ModelMapper modelMapper;    private final JwtHelper jwtHelper;    @Override    public List<UserEO> findAll() {        return userRepo.findAll();    }    @Override    public UserEO findById(String id) {        return userRepo.findById(id).get();    }    @Override    public UserResponseDTO getUserFrom(String header) {        String token = header.substring(6);        String userName = jwtHelper.getUsernameFromToken(token);        UserEO userEO = userRepo.findByEmail(userName);        if(userEO == null){            throw new UsernameNotFoundException("User not found");        }        return modelMapper.map(userEO,UserResponseDTO.class);    }}